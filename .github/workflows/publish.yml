name: Publish releases

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

env:
  YARN_ENABLE_GLOBAL_CACHE: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      release_tag: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445  # v4.2.0
        id: release
        with:
          config-file: release-please-config.json

  npm-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020  # v4.4.0
        with:
          node-version: lts/*

      - name: Get the Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(corepack yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-yarn-

      - name: Copy README to sub-directories
        run: |
          cp README.md packages/cli/.
          cp README.md packages/core/.

      - name: Publish to the npm registry
        run: |
          corepack yarn install --immutable
          corepack yarn build
          corepack yarn workspaces foreach --all --no-private npm publish --provenance --access public
        env:
          YARN_NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
